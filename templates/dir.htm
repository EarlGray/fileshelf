{% extends "tmpl.htm" %}
{% block style %}
<style>
#dir-entries-header {
  border-bottom: 1px solid #aaa;
}
#dir-entries-header th {
  text-align: left;
  padding: 0.3em 0.5em;
}
#dir-entries-header th#deh-dl {
  padding: 0;
}

.entry-row {
  margin-top: 0.2em;
  margin-bottom: 0.2em;
  padding: 0.3em 0;
}
.entry-row:hover {
  background-color: #f8f8ff;
}
.entry-row:hover .hoverable {
  display: inline-block;
}
.entry-name > a:focus {
  /*outline: 0;*/
}

.entry-size {
  padding-left: 1em;
  font-size: 90%;
}
.entry-ctime {
  padding-right: 1em;
  font-size: 90%;
  color: #666;
}
.entry-name {
  padding: 0.2em 1em 0.2em 0.2em;

  word-wrap: break-word;
  min-width: 12em;
  max-width: 30em;
}
.entry-action {
  padding: 0 0.5em;
}
.entry-em {
  font-weight: bold;
}
</style>
{% endblock %}

{% block toolbar %}
{% endblock %}

{% block body %}
{% if clipboard %}
<details id="clipboard-container" class="inline" style="padding-left: 0.2em;">
  <summary>
    clipboard
    <form class="inline" method="POST">
      <input type="hidden" name="action" value="cb_clear">
      <input type="submit" name="clear" value="clear">
    </form>
    <form id="cb-paste-form" class="inline" method="POST">
      <input type="hidden" name="action" value="paste">
      <input type="submit" name="paste" value="paste">
    </form>
  </summary>
  <div>
    <table id="clipboard-tbl">
      <tbody>
        <tr>
          <th>type</th>
          <th>path</th>
          <th></th>
          <th>action</th>
        </tr>
        {% for entry in clipboard -%}
        <tr>
          <td class="{{ entry.icon_src }} icon"></td>
          <td>{{ entry.path }}</td>
          <td>{{ entry.do }}</td>
          <td>
            <form method="POST">
              <input type="hidden" name="action" value="restore">
              <input type="hidden" name="path" value="{{ entry.path }}">
              <input type="submit" name="restore" value="restore" disabled>
            </form>
          </td>
        </tr>
        {% endfor %}
      </tbody>
    </table>
  </div>
</details>
<hr>
{% endif %}
<table id="dir-entries">
  <tr id="dir-entries-header">
    <th id="deh-dl" class="dl-icon icon"> </th>
    <th>name &nbsp;</th>
    {# <th>type &nbsp;</th> -#}
    <th>created &nbsp;</th>
    <th>size &nbsp;</th>
    {# <th>access &nbsp;</th> -#}
    <th>action &nbsp;</th>
  </tr>
  {% for entry in lsdir %}
  <tr class="entry-row"
      {% if entry.is_hidden -%}data-hidden {% endif -%}
      data-ctime="{{ entry.ctime }}"
      {% if entry.mime -%}data-mime="{{ entry.mime }}"{% endif -%}>
    <td class="entry-icon">
      <a class="{{ entry.icon_src }} block icon" href="{{ entry.href + '?dl' }}"></a>
    </td>
    <td class="entry-name">
      {% if rename == entry.name -%}
      <form method="POST">
        <input type="hidden" name="action" value="rename">
        <input type="hidden" name="oldname" value="{{ entry.name }}">
        <input type="text" name="newname" value="{{ entry.name }}" autofocus>
        <input type="submit" value="rename">
      </form>
      {% elif entry.see_url -%}
      <a href="{{ entry.see_url }}" class="file-link" tabindex="{{ entry.tabindex }}">
        {{ entry.name }}
      </a>
      {% else -%}
      <a href="{{ entry.href }}" class="file-link" tabindex="{{ entry.tabindex }}">
        {{ entry.name }}
      </a>
      {% endif -%}
    </td>
    {# <td class="entry-type">{{ entry.mime }}</td> -#}
    <td class="entry-ctime" title="{{ entry.full_ctime }}">{{ entry.created_at }}</td>
    <td class="pull-right entry-size">{{ entry.size }}</td>
    {# <td class="pull-right entry-access">
      {% if entry.shared -%}
      <a class="entry-em" href="{{ entry.shared }}">public</a>
      {% elif not entry.isdir -%}
      <form class="hoverable" action="" method="POST">
        <input type="hidden" name="action" value="share">
        <input type="hidden" name="file" value="{{ entry.name }}">
        <input type="submit" name="share" value="share">
      </form>
      {% endif -%}
    </td> -#}
    <td class="entry-action">
      <form data-do="copy" class="hoverable" method="POST">
        <input type="hidden" name="action" value="copy">
        <input type="hidden" name="name" value="{{ entry.name }}">
        <input type="submit" name="copy" value="copy">
      </form>
      <form data-do="cut" class="hoverable" method="POST">
        <input type="hidden" name="action" value="cut">
        <input type="hidden" name="name" value="{{ entry.name }}">
        <input type="submit" name="cut" value="cut">
      </form>
      {% if entry.rename_url -%}
      <a href="{{ entry.rename_url }}" class="hoverable">
        <input type="button" value="rename">
      </a>
      {% endif -%}
      <form data-do="delete" class="hoverable" action="" method="POST">
        <input type="hidden" name="action" value="delete">
        <input type="hidden" name="filename" value="{{ entry.name }}">
        <input type="submit" name="delete" value="delete">
      </form>
    </td>
  </tr>
  {% if entry.play -%}
  <tr class="entry-play">
    <td class="entry-icon"></td>
    <td class="entry-name">
      <audio id="play-audio" src="{{ entry.href }}" autoplay="true" controls>No sound :(</audio>
    </td>
    <td class="entry-ctime"></td>
  </tr>
  <script>
    var tr = document.querySelector('tr.entry-play');
    var player = tr.querySelector('audio');
    player.onended = function () {
      while (true) {
        tr = tr.nextElementSibling;
        if (!tr)
          break;
        var mime = tr.getAttribute('data-mime');
        if (mime && mime.startsWith('audio/')) {
          window.location = tr.querySelector('.file-link').href;
          break;
        }
      }
    };
  </script>
  {% endif -%}
  {% endfor -%}
</table>

<hr/>
<form action="" method="POST" enctype="multipart/form-data">
  <input type="hidden" name="action" value="upload">
  <input type="file" name="file" tabindex="{{ upload_tabidx }}"/>
  <input type="submit" name="upload" value="Upload" tabindex="{{ upload_tabidx + 1 }}"/>
</form>
{# after the main content is shown: -#}
<style id="dir-css">
.block { display: block; }
.icon::after { content: '.'; }
tr[data-hidden] { opacity: 0.55; }
.icon { background-size: 1.2em; width: 20px; background-repeat: no-repeat; text-indent: -200em; }
.dir-icon { background-image: url("data:image/png;base64,{% include "res/dir.png.base64" -%}"); }
.file-icon { background-image: url("data:image/gif;base64,{% include "res/file.gif.base64" -%}"); }
.dl-icon { background-image: url("data:image/svg+xml;base64,{% include "res/dl.svg.base64" %}"); }
.focused { background-color: #e8eeff; }
</style>
<script>
window.focused = undefined;
window.onfocus = function () {
  if (window.focused)
    focused.querySelector('.file-link').focus();
};

var macKbd = (navigator.userAgent.indexOf('Macintosh') >= 0);

var entries = document.querySelectorAll('.entry-row');
for (var i = 0; i < entries.length; ++i) {
  var tr = entries[i];
  var filelink = tr.querySelector('.file-link');
  tr.onclick = function () {
    console.log(this);
    window.focused = this;
    this.querySelector('.file-link').focus();
  };

  filelink.onfocus = function () {
    window.focused = this.parentElement.parentElement;
    window.focused.classList.add('focused');
  };
  filelink.onblur = function () {
    var tr = this.parentElement.parentElement;
    tr.classList.remove('focused');
  }
}
var nooutline = document.createElement('style');
nooutline.innerText = '.entry-name > a:focus { outline: 0 }';
document.head.appendChild(nooutline);

document.body.onkeydown = function (e) {
  var newFocused;
  if (e.shiftKey || e.ctrlKey || e.altKey || e.metaKey) {
    if (macKbd ? e.metaKey : e.ctrlKey) {
      switch (e.key) {
        case 'c':
          focused.querySelector('form[data-do="copy"]').submit();
          break;
        case 'x':
          focused.querySelector('form[data-do="cut"]').submit();
          break;
        case 'v':
          document.querySelector('form#cb-paste-form').submit();
          break;
      }
    }
    if (macKbd ? e.metaKey : e.altKey) {
      switch (e.key) {
      case 'ArrowUp':
        var path = location.pathname.split('/');
        if (path.length > 2) {
          path.pop();
          window.location = path.join('/');
        }
        break;
      case 'ArrowDown':
        var path = focused.querySelector('.file-link').href;
        window.location = path;
        break;
      }
    }
  } else {
    switch (e.key) {
    case 'ArrowUp':
      if (focused) {
        newFocused = focused;
        do { /* skip rows without "entry-name" */
            newFocused = newFocused.previousElementSibling;
        } while (newFocused && !(newFocused.querySelector('.file-link')));
      } else
        newFocused = document.querySelectorAll('.entry-row:last-child');
      break;
    case 'ArrowDown':
      if (focused) {
        newFocused = focused;
        do { /* skip rows without "entry-name" */
          newFocused = newFocused.nextElementSibling;
        } while (newFocused && !(newFocused.querySelector('.entry-name a')));
      } else
        newFocused = document.querySelectorAll('.entry-row')[0];
      break;
    case 'Home':
      newFocused = document.querySelector('.entry-row');
      break;
    case 'End':
      newFocused = document.querySelector('.entry-row:last-child');
      break;
    default:
      console.log(e.key + ' is down');
    }
  }
  /* focus next */
  if (newFocused) {
    newFocused.querySelector('.file-link').focus();
    focused = newFocused;
  }
};
</script>
{% endblock %}
